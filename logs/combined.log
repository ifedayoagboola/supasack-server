{"level":"info","message":"Listening on port 3210","timestamp":"2023-03-23T04:09:37.257Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2023-03-23T04:10:03.516Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2023-04-11T22:31:42.107Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2023-04-11T22:47:14.419Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2023-06-09T14:14:42.177Z"}
{"level":"error","message":"Internal Error Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at /Users/mac/gatetech/e_backend/src/apis/v1/productModule/product.service.ts:174:57\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/mac/gatetech/e_backend/src/apis/v1/productModule/product.service.ts:5:58)","timestamp":"2023-06-09T14:18:46.329Z"}
{"level":"error","message":"Internal Error Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at /Users/mac/gatetech/e_backend/src/apis/v1/productModule/product.service.ts:174:57\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/mac/gatetech/e_backend/src/apis/v1/productModule/product.service.ts:5:58)","timestamp":"2023-06-09T14:20:18.176Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2023-06-19T23:47:14.842Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2023-06-20T00:04:59.658Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2023-06-20T00:10:11.610Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-06T13:40:26.143Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T16:15:56.137Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T16:48:41.266Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T16:49:34.516Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T17:18:33.316Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T18:34:48.841Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T20:14:40.329Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T20:25:49.337Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T20:27:55.697Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T20:36:01.878Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T20:36:39.388Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T21:43:59.322Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-18T22:42:01.901Z"}

{"level":"info","message":"Listening on port 3210","timestamp":"2024-07-27T00:01:26.913Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-09-06T23:36:49.438Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-09-06T23:37:58.754Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-09-06T23:39:31.028Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `db_1.default.user.findFirst()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/auth.repository.js:36:40\n\n  33 });\n  34 exports.createBulkRepo = createBulkRepo;\n  35 const findAuthUser = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 36     let user = yield db_1.default.user.findFirst(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `db_1.default.user.findFirst()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/auth.repository.js:36:40\n\n  33 });\n  34 exports.createBulkRepo = createBulkRepo;\n  35 const findAuthUser = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 36     let user = yield db_1.default.user.findFirst(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-09-07T01:34:47.794Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `db_1.default.user.findFirst()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/auth.repository.js:43:40\n\n  40 });\n  41 exports.findAuthUser = findAuthUser;\n  42 const findUserRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 43     let user = yield db_1.default.user.findFirst(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `db_1.default.user.findFirst()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/auth.repository.js:43:40\n\n  40 });\n  41 exports.findAuthUser = findAuthUser;\n  42 const findUserRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 43     let user = yield db_1.default.user.findFirst(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-09-07T01:35:57.466Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2024-10-26T15:57:30.898Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-10-26T17:04:52.070Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-10-26T17:06:29.734Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-10-26T17:06:50.747Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-10-26T17:09:06.863Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-10-26T17:09:28.515Z"}
{"clientVersion":"4.2.1","level":"error","message":"Internal Error \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.","stack":"Error: \nInvalid `prisma.category.findMany()` invocation in\n/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/dist/src/apis/repositories/categories.repository.js:33:44\n\n  30 });\n  31 exports.findCategoryRepo = findCategoryRepo;\n  32 const fetchAllCategoriesRepo = (filters) => __awaiter(void 0, void 0, void 0, function* () {\n→ 33     const category = yield prisma.category.findMany(\n  Can't reach database server at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `bitshub-db.c7ea46002lz2.us-east-1.rds.amazonaws.com`:`5432`.\n    at RequestHandler.handleRequestError (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28844:13)\n    at RequestHandler.request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:28820:12)\n    at async PrismaClient._request (/Users/ifedayoagboola/Desktop/myProjects/bitshub-it/node_modules/@prisma/client/runtime/index.js:29753:16)","timestamp":"2024-10-26T17:09:44.791Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-02-22T21:53:02.379Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-02-22T21:53:44.401Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-02-22T22:01:43.333Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-02-22T22:02:50.011Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-10T22:10:30.914Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-10T22:22:04.334Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-10T22:24:08.400Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-11T12:05:02.791Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-11T15:04:05.909Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-11T22:57:15.877Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-12T00:01:12.063Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-12T00:01:15.288Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-12T00:01:56.839Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-05-12T00:02:24.001Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-06-30T20:55:37.996Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-06-30T22:51:55.393Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-06-30T22:52:36.997Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-06-30T22:54:37.002Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-06-30T22:55:35.397Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-06-30T22:59:55.117Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-02T00:53:47.788Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-04T06:01:41.685Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-04T06:17:36.308Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-04T06:36:51.014Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-04T06:38:22.677Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.create()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:7:39\n\n  4 \n  5 export const createUserRepo = async (userData: Partial<User>): Promise<User> => {\n  6   const { first_name, last_name, email, password } = userData;\n→ 7   let createdUser = await prisma.user.create({\n        data: {\n          first_name: \"Ifedayo\",\n          last_name: \"Agboola\",\n          email: \"ifedayoagboola19@gmail.com\",\n          password: \"$2b$10$rg6FGxTbQ8SjWNELydwdwOmq1VCyt8/MFapK7CO.90Z0G1SeG7YbO\",\n          phone_number: \"08103431851\",\n          ~~~~~~~~~~~~\n      ?   id?: String,\n      ?   user_name?: String | Null,\n      ?   is_email_verified?: Boolean,\n      ?   active?: Boolean,\n      ?   mobile?: String | Null,\n      ?   is_mobile_verified?: Boolean | Null,\n      ?   sex?: String | Null,\n      ?   dob?: String | Null,\n      ?   profile_cover_img?: String | Null,\n      ?   qr_code?: String | Null,\n      ?   img_url?: String | Null,\n      ?   reset_password_token?: String | Null,\n      ?   reset_password_expire?: String | Null,\n      ?   token?: String | Null,\n      ?   oAuth_token?: String | Null,\n      ?   oAuth_channel?: String | Null,\n      ?   refresh_token?: String | Null,\n      ?   created_at?: DateTime,\n      ?   updated_at?: DateTime,\n      ?   isDeleted?: Boolean,\n      ?   wallet?: WalletCreateNestedManyWithoutUserInput,\n      ?   product?: ProductCreateNestedManyWithoutUserInput,\n      ?   product_variants?: ProductVariantCreateNestedManyWithoutUserInput,\n      ?   payout_account?: PayoutAccountCreateNestedManyWithoutUserInput,\n      ?   store?: StoreCreateNestedManyWithoutUserInput,\n      ?   store_roles?: StoreRoleCreateNestedManyWithoutUserInput,\n      ?   order?: OrderCreateNestedManyWithoutUserInput,\n      ?   delivery_information?: DeliveryInformationCreateNestedManyWithoutUserInput,\n      ?   address_book?: AddressBookCreateNestedManyWithoutUserInput,\n      ?   Ratings?: RatingsCreateNestedManyWithoutUserInput,\n      ?   Comments?: CommentsCreateNestedManyWithoutUserInput,\n      ?   commentReplies?: CommentRepliesCreateNestedManyWithoutUserInput\n        }\n      })\n\nUnknown argument `phone_number`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.create()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:7:39\n\n  4 \n  5 export const createUserRepo = async (userData: Partial<User>): Promise<User> => {\n  6   const { first_name, last_name, email, password } = userData;\n→ 7   let createdUser = await prisma.user.create({\n        data: {\n          first_name: \"Ifedayo\",\n          last_name: \"Agboola\",\n          email: \"ifedayoagboola19@gmail.com\",\n          password: \"$2b$10$rg6FGxTbQ8SjWNELydwdwOmq1VCyt8/MFapK7CO.90Z0G1SeG7YbO\",\n          phone_number: \"08103431851\",\n          ~~~~~~~~~~~~\n      ?   id?: String,\n      ?   user_name?: String | Null,\n      ?   is_email_verified?: Boolean,\n      ?   active?: Boolean,\n      ?   mobile?: String | Null,\n      ?   is_mobile_verified?: Boolean | Null,\n      ?   sex?: String | Null,\n      ?   dob?: String | Null,\n      ?   profile_cover_img?: String | Null,\n      ?   qr_code?: String | Null,\n      ?   img_url?: String | Null,\n      ?   reset_password_token?: String | Null,\n      ?   reset_password_expire?: String | Null,\n      ?   token?: String | Null,\n      ?   oAuth_token?: String | Null,\n      ?   oAuth_channel?: String | Null,\n      ?   refresh_token?: String | Null,\n      ?   created_at?: DateTime,\n      ?   updated_at?: DateTime,\n      ?   isDeleted?: Boolean,\n      ?   wallet?: WalletCreateNestedManyWithoutUserInput,\n      ?   product?: ProductCreateNestedManyWithoutUserInput,\n      ?   product_variants?: ProductVariantCreateNestedManyWithoutUserInput,\n      ?   payout_account?: PayoutAccountCreateNestedManyWithoutUserInput,\n      ?   store?: StoreCreateNestedManyWithoutUserInput,\n      ?   store_roles?: StoreRoleCreateNestedManyWithoutUserInput,\n      ?   order?: OrderCreateNestedManyWithoutUserInput,\n      ?   delivery_information?: DeliveryInformationCreateNestedManyWithoutUserInput,\n      ?   address_book?: AddressBookCreateNestedManyWithoutUserInput,\n      ?   Ratings?: RatingsCreateNestedManyWithoutUserInput,\n      ?   Comments?: CommentsCreateNestedManyWithoutUserInput,\n      ?   commentReplies?: CommentRepliesCreateNestedManyWithoutUserInput\n        }\n      })\n\nUnknown argument `phone_number`. Available options are marked with ?.\n    at kn (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T07:54:42.675Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-04T08:14:56.050Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T08:15:28.515Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T08:16:26.615Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T08:16:47.389Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-04T08:19:53.825Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T08:20:11.180Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T08:45:16.153Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T14:40:01.495Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-04T14:41:33.832Z"}
{"clientVersion":"6.10.1","level":"error","message":"Internal Error \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\auth.repository.ts:35:32\n\n  32 };\n  33 \n  34 export const findUserRepo = async (filters: Partial<User>): Promise<User | undefined> => {\n→ 35   let user = await prisma.user.findFirst(\nerror: Environment variable not found: TEST_DATABASE_URL.\n  -->  schema.prisma:4\n   | \n 3 |   provider = \"postgresql\"\n 4 |   url      = env(\"TEST_DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at Zn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7759)\n    at Zn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)","timestamp":"2025-07-04T14:42:18.679Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-05T00:39:11.258Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-05T00:39:23.449Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T14:22:02.414Z"}
{"level":"error","message":"Response: Network Error","timestamp":"2025-07-12T17:34:23.585Z"}
{"level":"error","message":"[Email failed to send] => connect ECONNREFUSED ::1:80","timestamp":"2025-07-12T17:34:23.587Z"}
{"clientVersion":"6.11.1","code":"P2002","level":"error","message":"Internal Error \nInvalid `trx.store.create()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\store.repository.ts:16:35\n\n  13 \n  14 return await prisma.$transaction(async (trx) => {\n  15   // Create store\n→ 16   const store = await trx.store.create(\nUnique constraint failed on the fields: (`brand_name`)","meta":{"modelName":"Store","target":["brand_name"]},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `trx.store.create()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\store.repository.ts:16:35\n\n  13 \n  14 return await prisma.$transaction(async (trx) => {\n  15   // Create store\n→ 16   const store = await trx.store.create(\nUnique constraint failed on the fields: (`brand_name`)\n    at Xn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)","timestamp":"2025-07-12T17:35:35.778Z"}
{"clientVersion":"6.11.1","code":"P2002","level":"error","message":"Internal Error \nInvalid `trx.store.create()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\store.repository.ts:16:35\n\n  13 \n  14 return await prisma.$transaction(async (trx) => {\n  15   // Create store\n→ 16   const store = await trx.store.create(\nUnique constraint failed on the fields: (`brand_name`)","meta":{"modelName":"Store","target":["brand_name"]},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `trx.store.create()` invocation in\nC:\\Users\\user\\Projects\\Bitshub\\server\\src\\apis\\repositories\\store.repository.ts:16:35\n\n  13 \n  14 return await prisma.$transaction(async (trx) => {\n  15   // Create store\n→ 16   const store = await trx.store.create(\nUnique constraint failed on the fields: (`brand_name`)\n    at Xn.handleRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7459)\n    at Xn.handleAndLogRequestError (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Xn.request (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at l (C:\\Users\\user\\Projects\\Bitshub\\server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9812)","timestamp":"2025-07-12T17:36:17.129Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T17:38:29.677Z"}
{"level":"error","message":"Response: Network Error","timestamp":"2025-07-12T17:46:47.991Z"}
{"level":"error","message":"[Email failed to send] => connect ECONNREFUSED ::1:80","timestamp":"2025-07-12T17:46:47.992Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T17:50:31.482Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T17:50:37.334Z"}
{"level":"error","message":"Response: Network Error","timestamp":"2025-07-12T18:08:05.968Z"}
{"level":"error","message":"[Email failed to send] => connect ECONNREFUSED ::1:80","timestamp":"2025-07-12T18:08:05.969Z"}
{"level":"error","message":"Response: Network Error","timestamp":"2025-07-12T18:08:05.980Z"}
{"level":"error","message":"[Email failed to send] => connect ECONNREFUSED ::1:80","timestamp":"2025-07-12T18:08:05.986Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T18:21:12.299Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T18:21:33.789Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T18:21:42.903Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T18:21:51.138Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T18:22:02.545Z"}
{"level":"info","message":"[EMAIL TEST] Configuration check:","sendboxAppIdPresent":false,"sendboxSecretKeyPresent":false,"sendboxTokenPresent":true,"timestamp":"2025-07-12T18:22:38.382Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T18:31:57.544Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T18:33:20.923Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T19:15:42.341Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T19:15:55.792Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T19:16:34.831Z"}
{"fromEmail":"noreply@bitshub.co","level":"info","message":"[EMAIL TEST] Configuration check:","nodemailerConfigured":false,"sendboxAppIdPresent":false,"sendboxSecretKeyPresent":false,"sendboxTokenPresent":true,"smtpHost":"smtp.gmail.com","smtpPassPresent":false,"smtpPort":587,"smtpSecure":false,"smtpUserPresent":false,"timestamp":"2025-07-12T19:16:55.549Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T19:26:08.989Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T19:26:14.516Z"}
{"fromEmail":"noreply@bitshub.co","level":"info","message":"[EMAIL TEST] Configuration check:","nodemailerConfigured":false,"sendboxAppIdPresent":false,"sendboxSecretKeyPresent":false,"sendboxTokenPresent":true,"smtpHost":"smtp.gmail.com","smtpPassPresent":false,"smtpPort":587,"smtpSecure":false,"smtpUserPresent":false,"timestamp":"2025-07-12T20:21:16.503Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T20:23:56.427Z"}
{"fromEmail":"noreply@bitscartel.io","level":"info","message":"[EMAIL TEST] Configuration check:","nodemailerConfigured":true,"sendboxAppIdPresent":false,"sendboxSecretKeyPresent":false,"sendboxTokenPresent":true,"smtpHost":"smtp.zoho.com","smtpPassPresent":true,"smtpPort":465,"smtpSecure":true,"smtpUserPresent":true,"timestamp":"2025-07-12T20:24:06.035Z"}
{"level":"info","message":"[EMAIL DEBUG] Email service base URL: undefined","timestamp":"2025-07-12T20:37:04.006Z"}
{"level":"info","message":"[EMAIL DEBUG] Sendbox token: Present","timestamp":"2025-07-12T20:37:04.007Z"}
{"level":"info","message":"[EMAIL] Nodemailer configured, sending notifications...","timestamp":"2025-07-12T20:37:04.007Z"}
{"level":"info","message":"[EMAIL DEBUG] Attempting to send emails to admin and user: ifedayoagboola19@gmail.com","timestamp":"2025-07-12T20:37:04.008Z"}
{"level":"info","message":"[NODEMAILER] Sending email to: bitshubitsolutions@gmail.com","timestamp":"2025-07-12T20:37:04.008Z"}
{"level":"info","message":"[NODEMAILER] Subject: Bitshub - New Store Application: store4","timestamp":"2025-07-12T20:37:04.011Z"}
{"level":"info","message":"[NODEMAILER] Sending email to: ifedayoagboola19@gmail.com","timestamp":"2025-07-12T20:37:04.017Z"}
{"level":"info","message":"[NODEMAILER] Subject: Welcome to Bitshub - Your Store Application","timestamp":"2025-07-12T20:37:04.018Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[NODEMAILER] Failed to send email to ifedayoagboola19@gmail.com: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T20:37:04.657Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[EMAIL DEBUG] Failed to send store creation emails: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T20:37:04.658Z"}
{"level":"error","message":"[EMAIL DEBUG] Error details: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T20:37:04.659Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[NODEMAILER] Failed to send email to bitshubitsolutions@gmail.com: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T20:37:04.665Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T20:41:55.335Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T20:41:59.970Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T20:42:03.956Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T21:09:44.418Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-12T21:16:01.178Z"}
{"level":"info","message":"[EMAIL DEBUG] Email service base URL: undefined","timestamp":"2025-07-12T21:17:47.626Z"}
{"level":"info","message":"[EMAIL DEBUG] Sendbox token: Present","timestamp":"2025-07-12T21:17:47.627Z"}
{"level":"info","message":"[EMAIL] Nodemailer configured, sending notifications...","timestamp":"2025-07-12T21:17:47.628Z"}
{"level":"info","message":"[EMAIL DEBUG] Attempting to send emails to admin and user: ifedayoagboola19@gmail.com","timestamp":"2025-07-12T21:17:47.628Z"}
{"level":"info","message":"[NODEMAILER] Sending email to: bitshubitsolutions@gmail.com","timestamp":"2025-07-12T21:17:47.629Z"}
{"level":"info","message":"[NODEMAILER] Subject: Bitshub - New Store Application: store5","timestamp":"2025-07-12T21:17:47.629Z"}
{"level":"info","message":"[NODEMAILER] Sending email to: ifedayoagboola19@gmail.com","timestamp":"2025-07-12T21:17:47.634Z"}
{"level":"info","message":"[NODEMAILER] Subject: Welcome to Bitshub - Your Store Application","timestamp":"2025-07-12T21:17:47.635Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[NODEMAILER] Failed to send email to bitshubitsolutions@gmail.com: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T21:17:48.054Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[EMAIL DEBUG] Failed to send store creation emails: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T21:17:48.055Z"}
{"level":"error","message":"[EMAIL DEBUG] Error details: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T21:17:48.055Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[NODEMAILER] Failed to send email to ifedayoagboola19@gmail.com: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-12T21:17:48.057Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-13T06:32:24.332Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-13T07:36:01.410Z"}
{"level":"info","message":"[EMAIL DEBUG] Email service base URL: undefined","timestamp":"2025-07-14T15:40:07.207Z"}
{"level":"info","message":"[EMAIL DEBUG] Sendbox token: Present","timestamp":"2025-07-14T15:40:07.215Z"}
{"level":"info","message":"[EMAIL] Nodemailer configured, sending notifications...","timestamp":"2025-07-14T15:40:07.215Z"}
{"level":"info","message":"[EMAIL DEBUG] Attempting to send emails to admin and user: ifedayoagboola19@gmail.com","timestamp":"2025-07-14T15:40:07.217Z"}
{"level":"info","message":"[NODEMAILER] Sending email to: bitshubitsolutions@gmail.com","timestamp":"2025-07-14T15:40:07.222Z"}
{"level":"info","message":"[NODEMAILER] Subject: Bitshub - New Store Application: store6","timestamp":"2025-07-14T15:40:07.223Z"}
{"level":"info","message":"[NODEMAILER] Sending email to: ifedayoagboola19@gmail.com","timestamp":"2025-07-14T15:40:07.244Z"}
{"level":"info","message":"[NODEMAILER] Subject: Welcome to Bitshub - Your Store Application","timestamp":"2025-07-14T15:40:07.244Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[NODEMAILER] Failed to send email to bitshubitsolutions@gmail.com: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-14T15:40:07.692Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[EMAIL DEBUG] Failed to send store creation emails: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-14T15:40:07.694Z"}
{"level":"error","message":"[EMAIL DEBUG] Error details: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-14T15:40:07.694Z"}
{"code":"ESOCKET","command":"CONN","level":"error","message":"[NODEMAILER] Failed to send email to ifedayoagboola19@gmail.com: self-signed certificate in certificate chain","stack":"Error: self-signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (node:_tls_wrap:1679:34)\n    at TLSSocket.emit (node:events:518:28)\n    at TLSSocket.emit (node:domain:489:12)\n    at TLSSocket._finishInit (node:_tls_wrap:1078:8)\n    at TLSWrap.ssl.onhandshakedone (node:_tls_wrap:864:12)","timestamp":"2025-07-14T15:40:07.697Z"}
{"level":"info","message":"Listening on port 3210","timestamp":"2025-07-15T19:02:03.053Z"}
